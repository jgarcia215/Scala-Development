[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 19)
[debug]       Load.loadUnit: plugins took 14.889ms
[debug]       Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\jackg\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jackg\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.7594 ms
[debug]           Load.resolveProject(global-plugins) took 0.5235ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\jackg\.sbt\1.0\plugins, plugins: List(<none>))) took 1.4679ms
[debug] [Loading] Done in C:\Users\jackg\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 2.0178ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0039ms
[debug]     Load.loadUnit(file:/C:/Users/jackg/.sbt/1.0/plugins/, ...) took 17.3019ms
[debug]   Load.apply: load took 17.9527ms
[debug]   Load.apply: resolveProjects took 0.0478ms
[debug]   Load.apply: finalTransforms took 3.2915ms
[debug]   Load.apply: config.delegates took 0.1379ms
[debug]   Load.apply: Def.make(settings)... took 22.3989ms
[debug]   Load.apply: structureIndex took 9.2161ms
[debug]   Load.apply: mkStreams took 0.0017ms
[info] loading global plugins from C:\Users\jackg\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 137.9273ms
[debug]           Load.loadUnit: plugins took 15.7473ms
[debug]           Load.loadUnit: defsScala took 0.0022ms
[debug] [Loading] Scanning directory C:\Users\jackg\IdeaProjects\Web\project
[debug]             Load.loadUnit: mkEval took 0.1815ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jackg\IdeaProjects\Web\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.671 ms
[info] loading settings for project web-build from idea.sbt ...
[debug]               Load.resolveProject(web-build) took 2.5546ms
[debug]             Load.loadTransitive: finalizeProject(Project(id web-build, base: C:\Users\jackg\IdeaProjects\Web\project, plugins: List(<none>))) took 3.4618ms
[debug] [Loading] Done in C:\Users\jackg\IdeaProjects\Web\project, returning: (web-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 16.5799ms
[debug]           Load.loadUnit: cleanEvalClasses took 2.2979ms
[debug]         Load.loadUnit(file:/C:/Users/jackg/IdeaProjects/Web/project/, ...) took 35.0399ms
[debug]       Load.apply: load took 35.745ms
[debug]       Load.apply: resolveProjects took 0.0565ms
[debug]       Load.apply: finalTransforms took 3.4997ms
[debug]       Load.apply: config.delegates took 0.1261ms
[debug]       Load.apply: Def.make(settings)... took 21.5829ms
[debug]       Load.apply: structureIndex took 8.7271ms
[debug]       Load.apply: mkStreams took 0.0019ms
[info] loading project definition from C:\Users\jackg\IdeaProjects\Web\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 147.3828ms
[debug]     Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\jackg\IdeaProjects\Web
[debug]       Load.loadUnit: mkEval took 0.2261ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.4533 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 22.3534ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\jackg\IdeaProjects\Web, plugins: List(<none>))) took 24.1616ms
[debug] [Loading] Done in C:\Users\jackg\IdeaProjects\Web, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 523.7073ms
[debug]     Load.loadUnit: cleanEvalClasses took 10.5308ms
[debug]   Load.loadUnit(file:/C:/Users/jackg/IdeaProjects/Web/, ...) took 682.0612ms
[debug] Load.apply: load took 682.8949ms
[debug] Load.apply: resolveProjects took 0.0591ms
[debug] Load.apply: finalTransforms took 8.748ms
[debug] Load.apply: config.delegates took 0.1699ms
[debug] Load.apply: Def.make(settings)... took 35.7275ms
[debug] Load.apply: structureIndex took 10.7887ms
[debug] Load.apply: mkStreams took 0.0021ms
[warn] Discarding 1 session setting.  Use 'session save' to persist session settings.
[info] set current project to Web (in build file:/C:/Users/jackg/IdeaProjects/Web/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(idea-shell, None, None)
