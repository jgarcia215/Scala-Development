[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\jackg\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\jackg\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 19)
[debug]       Load.loadUnit: plugins took 98.8649ms
[debug]       Load.loadUnit: defsScala took 0.2403ms
[debug] [Loading] Scanning directory C:\Users\jackg\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jackg\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.3549 ms
[debug]           Load.resolveProject(global-plugins) took 32.2442ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\jackg\.sbt\1.0\plugins, plugins: List(<none>))) took 66.9495ms
[debug] [Loading] Done in C:\Users\jackg\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 89.8673ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1314ms
[debug]     Load.loadUnit(file:/C:/Users/jackg/.sbt/1.0/plugins/, ...) took 197.527ms
[debug]   Load.apply: load took 315.1771ms
[debug]   Load.apply: resolveProjects took 3.6036ms
[debug]   Load.apply: finalTransforms took 40.8179ms
[debug]   Load.apply: config.delegates took 5.1533ms
[debug]   Load.apply: Def.make(settings)... took 302.8655ms
[debug]   Load.apply: structureIndex took 85.3411ms
[debug]   Load.apply: mkStreams took 1.4625ms
[info] loading global plugins from C:\Users\jackg\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 2851.9024ms
[debug]           Load.loadUnit: plugins took 19.9602ms
[debug]           Load.loadUnit: defsScala took 0.0019ms
[debug] [Loading] Scanning directory C:\Users\jackg\IdeaProjects\Web\project
[debug]             Load.loadUnit: mkEval took 4.135ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jackg\IdeaProjects\Web\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.5044 ms
[info] loading settings for project web-build from idea.sbt ...
[debug]               Load.resolveProject(web-build) took 2.372ms
[debug]             Load.loadTransitive: finalizeProject(Project(id web-build, base: C:\Users\jackg\IdeaProjects\Web\project, plugins: List(<none>))) took 4.2921ms
[debug] [Loading] Done in C:\Users\jackg\IdeaProjects\Web\project, returning: (web-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1559.0476ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.5068ms
[debug]         Load.loadUnit(file:/C:/Users/jackg/IdeaProjects/Web/project/, ...) took 1584.1755ms
[debug]       Load.apply: load took 1585.3968ms
[debug]       Load.apply: resolveProjects took 0.1909ms
[debug]       Load.apply: finalTransforms took 7.3306ms
[debug]       Load.apply: config.delegates took 0.2855ms
[debug]       Load.apply: Def.make(settings)... took 59.6131ms
[debug]       Load.apply: structureIndex took 28.9542ms
[debug]       Load.apply: mkStreams took 0.0028ms
[info] loading project definition from C:\Users\jackg\IdeaProjects\Web\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 2869.7698ms
[debug]     Load.loadUnit: defsScala took 0.002ms
[debug] [Loading] Scanning directory C:\Users\jackg\IdeaProjects\Web
[debug]       Load.loadUnit: mkEval took 0.2067ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 1.2483 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 19.7652ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\jackg\IdeaProjects\Web, plugins: List(<none>))) took 22.1844ms
[debug] [Loading] Done in C:\Users\jackg\IdeaProjects\Web, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 863.2789ms
[debug]     Load.loadUnit: cleanEvalClasses took 18.2629ms
[debug]   Load.loadUnit(file:/C:/Users/jackg/IdeaProjects/Web/, ...) took 3751.867ms
[debug] Load.apply: load took 3753.2226ms
[debug] Load.apply: resolveProjects took 0.078ms
[debug] Load.apply: finalTransforms took 13.8841ms
[debug] Load.apply: config.delegates took 0.2144ms
[debug] Load.apply: Def.make(settings)... took 41.6144ms
[debug] Load.apply: structureIndex took 15.6189ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to Web (in build file:/C:/Users/jackg/IdeaProjects/Web/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 54975 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 54975, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Web (in build file:/C:/Users/jackg/IdeaProjects/Web/)
[debug] > Exec(idea-shell, None, None)
